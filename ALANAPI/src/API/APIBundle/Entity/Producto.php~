<?php

namespace MERCADO\MSBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * @ORM\Entity(repositoryClass="MERCADO\MSBundle\Entity\ProductoRepository")
 * @ORM\Table(name="producto") 
 */
class Producto {

    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\ManyToOne(targetEntity="SubCategoria", inversedBy="productos")
     * @ORM\JoinColumn(name="subcategoria_id", referencedColumnName="id")
     */
    protected $subcategoria;

    /**
     * @ORM\Column(type="text", length=1000,nullable=false)
     */
    protected $descripcion;

    /**
     * @ORM\Column(type="text", length=22,nullable=false)
     */
    protected $titulo;

    
    /**
     * @ORM\Column(type="float", scale=2)
     */
    protected $precio;

    /**
     * @ORM\Column(type="string", length=500,nullable=true)
     */
    protected $video;

    /**
     * @ORM\OneToMany(targetEntity="Imagen", mappedBy="producto",cascade={"persist"})
     */
    protected $imagenes;

    /**
     * @ORM\OneToMany(targetEntity="ProductoColor", mappedBy="producto",cascade={"persist"})
     */
    protected $coloresProducto;

    /**
     * @ORM\OneToMany(targetEntity="Publicacion", mappedBy="producto",cascade={"persist"})
     */
    protected $publicaciones;

    /*     * ********************************
     * __construct
     *
     * 
     * ******************************** */

    public function __construct() {
        $this->imagenes = new ArrayCollection();
        $this->coloresProducto = new ArrayCollection();
        $this->publicaciones = new ArrayCollection();
    }

    /*     * ********************************
     * __toString()
     *
     * Este mÃ©todo sirve para poder popular los comboboxes en los forms.
     * ******************************* */

    public function __toString() {       
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set descripcion
     *
     * @param string $descripcion
     * @return Producto
     */
    public function setDescripcion($descripcion) {
        $this->descripcion = $descripcion;

        return $this;
    }

    /**
     * Get descripcion
     *
     * @return string 
     */
    public function getDescripcion() {
        return $this->descripcion;
    }

    /**
     * Set precio
     *
     * @param float $precio
     * @return Producto
     */
    public function setPrecio($precio) {
        $this->precio = $precio;

        return $this;
    }

    /**
     * Get precio
     *
     * @return float 
     */
    public function getPrecio() {
        return $this->precio;
    }

    /**
     * Set video
     *
     * @param string $video
     * @return Producto
     */
    public function setVideo($video) {
        $this->video = $video;

        return $this;
    }

    /**
     * Get video
     *
     * @return string 
     */
    public function getVideo() {
        return $this->video;
    }

    /**
     * Set subcategoria
     *
     * @param \MERCADO\MSBundle\Entity\SubCategoria $subcategoria
     * @return Producto
     */
    public function setSubcategoria(\MERCADO\MSBundle\Entity\SubCategoria $subcategoria = null) {
        $this->subcategoria = $subcategoria;

        return $this;
    }

    /**
     * Get subcategoria
     *
     * @return \MERCADO\MSBundle\Entity\SubCategoria 
     */
    public function getSubcategoria() {
        return $this->subcategoria;
    }

    /**
     * Add coloresProducto
     *
     * @param \MERCADO\MSBundle\Entity\ProductoColor $coloresProducto
     * @return Producto
     */
    public function addColoresProducto(\MERCADO\MSBundle\Entity\ProductoColor $coloresProducto) {
        $this->coloresProducto[] = $coloresProducto;

        return $this;
    }

    /**
     * Remove coloresProducto
     *
     * @param \MERCADO\MSBundle\Entity\ProductoColor $coloresProducto
     */
    public function removeColoresProducto(\MERCADO\MSBundle\Entity\ProductoColor $coloresProducto) {
        $this->coloresProducto->removeElement($coloresProducto);
    }

    /**
     * Get coloresProducto
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getColoresProducto() {
        return $this->coloresProducto;
    }



    /**
     * Get publicaciones
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getPublicaciones() {
        return $this->publicaciones;
    }


   

    /**
     * Add publicaciones
     *
     * @param \MERCADO\MSBundle\Entity\Publicacion $publicaciones
     * @return Producto
     */
    public function addPublicacion(\MERCADO\MSBundle\Entity\Publicacion $publicaciones)
    {
        $this->publicaciones[] = $publicaciones;
    
        return $this;
    }

    /**
     * Remove publicaciones
     *
     * @param \MERCADO\MSBundle\Entity\Publicacion $publicaciones
     */
    public function removePublicacion(\MERCADO\MSBundle\Entity\Publicacion $publicaciones)
    {
        $this->publicaciones->removeElement($publicaciones);
    }

    /**
     * Add imagenes
     *
     * @param \MERCADO\MSBundle\Entity\Imagen $imagenes
     * @return Producto
     */
    public function addImagen(\MERCADO\MSBundle\Entity\Imagen $imagenes)
    {
        $this->imagenes[] = $imagenes;
    
        return $this;
    }

    /**
     * Remove imagenes
     *
     * @param \MERCADO\MSBundle\Entity\Imagen $imagenes
     */
    public function removeImagen(\MERCADO\MSBundle\Entity\Imagen $imagenes)
    {
        $this->imagenes->removeElement($imagenes);
    }

    /**
     * Get imagenes
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getImagenes()
    {
        return $this->imagenes;
    }

}