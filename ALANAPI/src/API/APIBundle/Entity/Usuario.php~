<?php

namespace MERCADO\MSBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * @ORM\Entity(repositoryClass="MERCADO\MSBundle\Entity\UsuarioRepository")
 * @ORM\Table(name="usuario") 
 * @UniqueEntity(
 * 		fields = {"email"},
 *                      errorPath ="email",
 *                      message="Ya existe un usuario con el mismo mail."
 * 		)
 * 
 */
class Usuario {

    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=100,nullable=false)
     */
    protected $nombre;

    /**
     * @ORM\Column(type="string", length=100,nullable=false)
     */
    protected $apellido;

    /**
     * @ORM\Column(type="string", length=200,nullable=false)
     */
    protected $email;

    /**
     * @ORM\Column(type="string", length=50,nullable=false)
     */
    protected $celular;

    /**
     * @ORM\Column(type="string", length=20,nullable=false)
     */
    protected $login;

    /**
     * @ORM\Column(type="string", length=100,nullable=false)
     */
    protected $perfil;

    /**
     * @ORM\Column(type="string", length=100,nullable=false)
     */
    protected $clave;

    /**
     * @ORM\Column(type="string", length=1)
     */
    protected $estado = 'A';

    /**
     * @ORM\ManyToOne(targetEntity="TipoUsuario", inversedBy="usuarios")
     * @ORM\JoinColumn(name="tipoUsuario_id", referencedColumnName="id",nullable=true)
     */
    protected $tipoUsuario;
    
    
    
    /**
     * @ORM\OneToMany(targetEntity="Publicacion", mappedBy="usuario")
     */
    protected $publicaciones;


    /**
     * @ORM\OneToMany(targetEntity="Favorito", mappedBy="usuario")
     */
    protected $favoritos;
    /**
     * @ORM\OneToMany(targetEntity="Compra", mappedBy="usuario")
     */
    protected $compras;
    /**
     * @ORM\OneToMany(targetEntity="Venta", mappedBy="usuario")
     */
    protected $ventas;
    

    /*     * ********************************
     * __construct
     *
     * 
     * ******************************** */

    public function __construct() {
        $this->publicaciones = new ArrayCollection();       
        $this->favoritos = new ArrayCollection();
        $this->compras = new ArrayCollection();
        $this->ventas = new ArrayCollection();
    }

    /*     * ********************************
     * __toString()
     *
     * Este mÃ©todo sirve para poder popular los comboboxes en los forms.
     * ******************************* */

    public function __toString() {
        return $this->getNombre() . ' - ' . $this->getApellido();
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId() {
        return $this->id;
    }

    /**
     * Set nombre
     *
     * @param string $nombre
     * @return Usuario
     */
    public function setNombre($nombre) {
        $this->nombre = $nombre;

        return $this;
    }

    /**
     * Get nombre
     *
     * @return string 
     */
    public function getNombre() {
        return $this->nombre;
    }

    /**
     * Set apellido
     *
     * @param string $apellido
     * @return Usuario
     */
    public function setApellido($apellido) {
        $this->apellido = $apellido;

        return $this;
    }

    /**
     * Get apellido
     *
     * @return string 
     */
    public function getApellido() {
        return $this->apellido;
    }

    /**
     * Set email
     *
     * @param string $email
     * @return Usuario
     */
    public function setEmail($email) {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail() {
        return $this->email;
    }

    /**
     * Set celular
     *
     * @param string $celular
     * @return Usuario
     */
    public function setCelular($celular) {
        $this->celular = $celular;

        return $this;
    }

    /**
     * Get celular
     *
     * @return string 
     */
    public function getCelular() {
        return $this->celular;
    }

    /**
     * Set login
     *
     * @param string $login
     * @return Usuario
     */
    public function setLogin($login) {
        $this->login = $login;

        return $this;
    }

    /**
     * Get login
     *
     * @return string 
     */
    public function getLogin() {
        return $this->login;
    }

    /**
     * Set perfil
     *
     * @param string $perfil
     * @return Usuario
     */
    public function setPerfil($perfil) {
        $this->perfil = $perfil;

        return $this;
    }

    /**
     * Get perfil
     *
     * @return string 
     */
    public function getPerfil() {
        return $this->perfil;
    }

    /**
     * Set clave
     *
     * @param string $clave
     * @return Usuario
     */
    public function setClave($clave) {
        $this->clave = $clave;

        return $this;
    }

    /**
     * Get clave
     *
     * @return string 
     */
    public function getClave() {
        return $this->clave;
    }

    /**
     * Set estado
     *
     * @param string $estado
     * @return Usuario
     */
    public function setEstado($estado) {
        $this->estado = $estado;

        return $this;
    }

    /**
     * Get estado
     *
     * @return string 
     */
    public function getEstado() {
        return $this->estado;
    }

    /**
     * Add publicaciones
     *
     * @param \MERCADO\MSBundle\Entity\Publicacion $publicaciones
     * @return Usuario
     */
    public function addPublicacione(\MERCADO\MSBundle\Entity\Publicacion $publicaciones) {
        $this->publicaciones[] = $publicaciones;

        return $this;
    }

    /**
     * Remove publicaciones
     *
     * @param \MERCADO\MSBundle\Entity\Publicacion $publicaciones
     */
    public function removePublicacione(\MERCADO\MSBundle\Entity\Publicacion $publicaciones) {
        $this->publicaciones->removeElement($publicaciones);
    }

    /**
     * Get publicaciones
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getPublicaciones() {
        return $this->publicaciones;
    }



    /**
     * Add favoritos
     *
     * @param \MERCADO\MSBundle\Entity\Favorito $favoritos
     * @return Usuario
     */
    public function addFavorito(\MERCADO\MSBundle\Entity\Favorito $favoritos)
    {
        $this->favoritos[] = $favoritos;
    
        return $this;
    }

    /**
     * Remove favoritos
     *
     * @param \MERCADO\MSBundle\Entity\Favorito $favoritos
     */
    public function removeFavorito(\MERCADO\MSBundle\Entity\Favorito $favoritos)
    {
        $this->favoritos->removeElement($favoritos);
    }

    /**
     * Get favoritos
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getFavoritos()
    {
        return $this->favoritos;
    }

    /**
     * Add compras
     *
     * @param \MERCADO\MSBundle\Entity\Compra $compras
     * @return Usuario
     */
    public function addCompra(\MERCADO\MSBundle\Entity\Compra $compras)
    {
        $this->compras[] = $compras;
    
        return $this;
    }

    /**
     * Remove compras
     *
     * @param \MERCADO\MSBundle\Entity\Compra $compras
     */
    public function removeCompra(\MERCADO\MSBundle\Entity\Compra $compras)
    {
        $this->compras->removeElement($compras);
    }

    /**
     * Get compras
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getCompras()
    {
        return $this->compras;
    }

    /**
     * Add ventas
     *
     * @param \MERCADO\MSBundle\Entity\Venta $ventas
     * @return Usuario
     */
    public function addVenta(\MERCADO\MSBundle\Entity\Venta $ventas)
    {
        $this->ventas[] = $ventas;
    
        return $this;
    }

    /**
     * Remove ventas
     *
     * @param \MERCADO\MSBundle\Entity\Venta $ventas
     */
    public function removeVenta(\MERCADO\MSBundle\Entity\Venta $ventas)
    {
        $this->ventas->removeElement($ventas);
    }

    /**
     * Get ventas
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getVentas()
    {
        return $this->ventas;
    }

    /**
     * Set tipoUsuario
     *
     * @param \MERCADO\MSBundle\Entity\TipoUsuario $tipoUsuario
     * @return Usuario
     */
    public function setTipoUsuario(\MERCADO\MSBundle\Entity\TipoUsuario $tipoUsuario = null)
    {
        $this->tipoUsuario = $tipoUsuario;
    
        return $this;
    }

    /**
     * Get tipoUsuario
     *
     * @return \MERCADO\MSBundle\Entity\TipoUsuario 
     */
    public function getTipoUsuario()
    {
        return $this->tipoUsuario;
    }
}