<?php

namespace MERCADO\MSBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * @ORM\Entity(repositoryClass="MERCADO\MSBundle\Entity\ColorRepository")
 * @ORM\Table(name="color") 
 * @UniqueEntity(
 * 		fields = {"descripcion"},
 *                      errorPath ="descripcion",
 *                      message="Ya existe un color con el mismo nombre."
 * 		)
 */
class Color {
    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;
    /**
     * @ORM\Column(type="string", length=50,nullable=false)
     */
    protected $descripcion;

    /**
     * @ORM\Column(type="string", length=50,nullable=false)
     */
    protected $color;
        
    /**
     * @ORM\Column(type="boolean", nullable=false, options={"default"=1})
     */
    protected $activo=true;

    /**
     * @ORM\OneToMany(targetEntity="ProductoColor", mappedBy="color")
     */
    protected $coloresProducto;
    
    
    
    /*     * ********************************
     * __construct
     *
     * 
     * ******************************** */

    public function __construct() {
        $this->coloresProducto = new ArrayCollection();
    }

    /*     * ********************************
     * __toString()
     *
     * Este mÃ©todo sirve para poder popular los comboboxes en los forms.
     * ******************************* */

    public function __toString  () {
        return $this->getDescripcion();
    }
    
    
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }
    
    
    /**
     * Set descripcion
     *
     * @param string $descripcion
     * @return Color
     */
    public function setDescripcion($descripcion)
    {
        $this->descripcion = $descripcion;
    
        return $this;
    }

    /**
     * Get descripcion
     *
     * @return string 
     */
    public function getDescripcion()
    {
        return $this->descripcion;
    }

    /**
     * Add coloresProducto
     *
     * @param \MERCADO\MSBundle\Entity\ProductoColor $coloresProducto
     * @return Color
     */
    public function addColoresProducto(\MERCADO\MSBundle\Entity\ProductoColor $coloresProducto)
    {
        $this->coloresProducto[] = $coloresProducto;
    
        return $this;
    }

    /**
     * Remove coloresProducto
     *
     * @param \MERCADO\MSBundle\Entity\ProductoColor $coloresProducto
     */
    public function removeColoresProducto(\MERCADO\MSBundle\Entity\ProductoColor $coloresProducto)
    {
        $this->coloresProducto->removeElement($coloresProducto);
    }

    /**
     * Get coloresProducto
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getColoresProducto()
    {
        return $this->coloresProducto;
    }

    /**
     * Set activo
     *
     * @param boolean $activo
     * @return Color
     */
    public function setActivo($activo)
    {
        $this->activo = $activo;
    
        return $this;
    }

    /**
     * Get activo
     *
     * @return boolean 
     */
    public function getActivo()
    {
        return $this->activo;
    }
}