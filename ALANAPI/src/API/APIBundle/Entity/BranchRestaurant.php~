<?php

namespace API\APIBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * @ORM\Entity(repositoryClass="API\APIBundle\Entity\BranchRestaurantRepository")
 * @ORM\Table(name="branch_restaurant") 
 */
class BranchRestaurant {

    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\ManyToOne(targetEntity="Restaurant", inversedBy="branches")
     * @ORM\JoinColumn(name="idRestaurant", referencedColumnName="idRestaurant")
     */
    protected $restaurant;

    /**
     * @ORM\Column(type="string", length=45)
     */
    protected $latitude;

    /**
     * @ORM\Column(type="string", length=45)
     */
    protected $longitude;

    /**
     * @ORM\Column(type="float", scale=2)
     */
    protected $averageCalification;

    /**
     * @ORM\Column(type="float", scale=2)
     */
    protected $averageFood;

    /**
     * @ORM\Column(type="float", scale=2)
     */
    protected $averageService;

    /**
     * @ORM\Column(type="float", scale=2)
     */
    protected $averageAmbience;
    
    /**
     * @ORM\OneToMany(targetEntity="RangePriceBranch", mappedBy="idBranchRestaurant")
     */
    protected $rangoPrecios;

    /**
     * @ORM\OneToMany(targetEntity="ServiceBranch", mappedBy="branchRestaurant")
     */
    protected $serviciosBranch;
    
    /**
     * @ORM\OneToMany(targetEntity="PhotoBranch", mappedBy="branchRestaurant")
     */
    protected $photosBranch;
    /**
     * @ORM\OneToMany(targetEntity="CuisineBranch", mappedBy="branchRestaurant")
     */
    protected $cuisinesBranch;
    /**
     * @ORM\OneToMany(targetEntity="TypeMenu", mappedBy="branchRestaurant")
     */
    protected $typesMenu;
    

    /*     * ********************************
     * __construct
     *
     * 
     * ******************************** */

    public function __construct() {
        
    }

    /*     * ********************************
     * __toString()
     *
     * Este método sirve para poder popular los comboboxes en los forms.
     * ******************************* */

    public function __toString() {
        
    }

}
